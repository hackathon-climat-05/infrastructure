name: Terraform

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Format
      id: fmt
      run: |
        terraform fmt -check

    - name: Terraform Init
      id: init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      run: |
        terraform init

    - name: Terraform Validate
      id: validate
      run: |
        terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        TF_VAR_ssh_deploy_key: ${{ secrets.SSH_DEPLOY_KEY }}
      run: |
        terraform plan -no-color -input=false
      continue-on-error: true

    - name: Truncate plan output
      id: truncate
      run: |
        PLAN=$(head -c 65000 <<'PLAN_EOF'
        ${{ steps.plan.outputs.stdout }}${{ steps.plan.outputs.stderr }}
        PLAN_EOF
        )

        echo "PLAN<<PLAN_EOF" >> $GITHUB_ENV
        echo "$PLAN" >> $GITHUB_ENV
        echo "PLAN_EOF" >> $GITHUB_ENV

    - name: Add PR comment
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: |
        exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        TF_VAR_ssh_deploy_key: ${{ secrets.SSH_DEPLOY_KEY }}
      run: |
        terraform apply -auto-approve -input=false
